// Generated using `moon info`, DON'T EDIT IT
package "Milky2018/selene/entity"

import(
  "Milky2018/selene/math"
)

// Values
fn get_roots() -> Iter[Entity]

fn iter_entities() -> Iter[Entity]

// Errors

// Types and methods
type Entity
fn Entity::destroy(Self) -> Unit
fn Entity::equal(Self, Self) -> Bool // from trait `Eq`
fn Entity::get_children(Self) -> Array[Self]
fn Entity::get_offset(Self) -> @math.Vec2D
fn Entity::get_parent(Self) -> Self?
fn Entity::hash(Self) -> Int // from trait `Hash`
fn Entity::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
fn Entity::is_alive(Self) -> Bool
fn Entity::is_child(Self) -> Bool
fn Entity::new() -> Self
#deprecated
fn Entity::op_equal(Self, Self) -> Bool // from trait `Eq`
fn Entity::output(Self, &Logger) -> Unit // from trait `Show`
fn Entity::respawn(Self) -> Unit
fn Entity::set_offset(Self, @math.Vec2D) -> Unit
fn Entity::spawn_child(Self, offset? : @math.Vec2D) -> Self
fn Entity::to_string(Self) -> String // from trait `Show`
impl Eq for Entity
impl Hash for Entity
impl Show for Entity

// Type aliases

// Traits

